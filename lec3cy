/*1.Problem Statement



Write a program to delete an element from an array and shift all the elements to the left to fill the gap. The program should prompt the user to enter the position of the element to be deleted and then display the updated array.

Input format :
The first line of input contains an integer representing the size of the array.

The second line of input contains the elements of the array, separated by a space.

The third line of input contains an integer to indicate the position of the element to be deleted.

Output format :
The output displays the original array before deletion and the updated array after deletion.



Refer to the sample output format for formatting specifications.

Code constraints :
Maximum size of the array (MAX_SIZE = 100).

The size of the array should be a positive integer.

The elements of the array can be any integer.

The position of the element to be deleted should be a valid position within the array bounds (between 1 and size, inclusive).

Sample test cases :
Input 1 :
5
1 2 3 4 5
6
Output 1 :
Original array: 1 2 3 4 5 
Invalid position!*/


#include<stdio.h>
int main()
{
    int size;
    scanf("%d",&size);
    int array[size];
    for(int i=0;i<size;i++)
    {
        scanf("%d",&array[i]);
    }
    int pos;
    scanf("%d",&pos);
    
    printf("Original array: ");
    for(int i=0;i<size;i++)
    {
        printf("%d ",array[i]);
    }
    printf("\n");
    if(pos<0 || pos >=size)
    {
        printf("Invalid position!\n");
    }
    else
    {
        for(int i=pos;i,size-1;i++)
        {
            array[i]=array[i+1];
        }
        size--;
        printf("Updated array: ");
        for(int i=0;i<size;i++)
        {
            printf("%d ",array[i]);
        }
        printf("\n");
    }
    return 0;
}



/*2.Problem Statement



You are given an array of integers representing the prices of a product over a period of time. Your task is to modify the array in such a way that each element is replaced by the product of its neighboring elements. The first and last elements will be replaced by the product of themselves and their adjacent element.



Note: This kind of question will be helpful in clearing Capgemini recruitment.

Input format :
The first line contains an integer n, representing the size of the array.

The second line contains n space-separated integers representing the elements of the array.

Output format :
The output consists of the modified array after performing the required operations, with each element separated by a space.

Code constraints :
The array size will be less than or equal to 50.

The array elements will be integers.

Sample test cases :
Input 1 :
5
2 3 4 5 6
Output 1 :
6 8 15 24 30 */



// You are using GCC
#include<stdio.h>
void modify_array(int ar[],int a)
{
    int modified_ar[a];
    for(int i=0;i<a;i++)
    {
        if(i==0)
        {
            modified_ar[i]=ar[i]*ar[i+1];
        }
        else if(i==a-1)
        {
            modified_ar[i]=ar[i-1]*ar[i];
        }
        else
        {
            modified_ar[i]=ar[i-1]*ar[i+1];
        }
    }
    for (int i=0;i<a;i++)
    {
        printf("%d ",modified_ar[i]);
    }
    printf("\n");
}
int main()
{
    int max=50;
    int a;
    scanf("%d",&a);
    if(a<=0||a>max)
    {
        printf("Invalid array size.\n");
        return 1;
    }
    int ar[max];
    for(int i=0;i<a;i++)
    {
        scanf("%d",&ar[i]);
    }
    modify_array(ar,a);
    return 0;
}